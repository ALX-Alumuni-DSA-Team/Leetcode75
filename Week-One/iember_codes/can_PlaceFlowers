class Solution:
    def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool:
        # Check each plot in the flowerbed
        for i in range(len(flowerbed)):
            # Check if a flower can be planted at position i
            if flowerbed[i] == 0:
                # Check left and right positions (if in bounds)
                empty_left = (i == 0) or (flowerbed[i - 1] == 0)
                empty_right = (i == len(flowerbed) - 1) or (flowerbed[i + 1] == 0)
                
                if empty_left and empty_right:
                    # Plant the flower here
                    flowerbed[i] = 1
                    n -= 1
                    # If all flowers have been planted, return True
                    if n == 0:
                        return True
        # If we finish the loop and still have flowers to plant, return False
        return n == 0

# Example usage:
# solution = Solution()
# print(solution.canPlaceFlowers([1, 0, 0, 0, 1], 1))  # Output: True
# print(solution.canPlaceFlowers([1, 0, 0, 0, 1], 2))  # Output: False
